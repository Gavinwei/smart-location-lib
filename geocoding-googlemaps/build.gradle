apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'


version smartLocationVersion
group 'io.nlopez.smartlocation'

dependencies {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        google()
        jcenter()
    }
    implementation project(':library')
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation "org.mockito:mockito-core:3.5.13"
}

android {
    compileSdkVersion slCompileSdkVersion
    buildToolsVersion slBuildToolsVersion

    buildTypes {
        defaultConfig {
            minSdkVersion slMinSdkVersion
            targetSdkVersion slTargetSdkVersion
            versionCode 20006
            versionName version
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {
            artifact "build/libs/SmartLocation-GeocodingGoogleMapsExtension-${version}.aar"
            artifactId 'geocoding-googlemaps'
        }
    }
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getProperty(project, property) {
    return project.hasProperty(property) ? project.property(property) : ""
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: getProperty(project, "sonatypeRepo")) {
            authentication(userName: getProperty(project, "sonatypeUsername"),
                    password: getProperty(project, "sonatypePassword"))
        }
        snapshotRepository(url: getProperty(project, "sonatypeSnapshotRepo")) {
            authentication(userName: getProperty(project, "sonatypeUsername"),
                    password: getProperty(project, "sonatypePassword"))
        }

        pom.project {
            name 'Smart Location Library Google Maps Geocoding API Extension'
            packaging 'aar'
            description 'This is an extension for using Google Maps Geocoding API with SmartLocation'
            url 'https://github.com/mrmans0n/smart-location-lib'
            artifactId 'geocoding-googlemaps'

            scm {
                url 'scm:git@github.com:mrmans0n/smart-location-lib.git'
                connection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
                developerConnection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
            }

            licenses {
                license {
                    name 'MIT license'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'mrmans0n'
                    name 'Nacho Lopez'
                    email 'nacho@nlopez.io'
                }
            }
        }
    }
}
